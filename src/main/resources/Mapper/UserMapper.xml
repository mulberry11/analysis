<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yth.analysis.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.yth.analysis.model.User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="autho" jdbcType="VARCHAR" property="autho"/>
        <result column="create_time" jdbcType="DATE" property="createTime"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="Identity" jdbcType="INTEGER" property="identity"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, `password`, autho, create_time, `name`, `Identity`
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="findUserList" resultType="com.yth.analysis.dto.UserDTO">
        select id, name, autho
        from user u
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.yth.analysis.model.User"
            useGeneratedKeys="true">
        insert into user (`password`, autho, create_time,
                          `name`, `Identity`)
        values (#{password,jdbcType=VARCHAR}, #{autho,jdbcType=VARCHAR}, #{createTime,jdbcType=DATE},
                #{name,jdbcType=VARCHAR}, #{identity,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.yth.analysis.model.User"
            useGeneratedKeys="true">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="password != null">
                `password`,
            </if>
            <if test="autho != null">
                autho,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="identity != null">
                `Identity`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="autho != null">
                #{autho,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=DATE},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="identity != null">
                #{identity,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.yth.analysis.model.User">
        update user
        <set>
            <if test="password != null">
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="autho != null">
                autho = #{autho,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=DATE},
            </if>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="identity != null">
                `Identity` = #{identity,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yth.analysis.model.User">
        update user
        set `password`  = #{password,jdbcType=VARCHAR},
            autho       = #{autho,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=DATE},
            `name`      = #{name,jdbcType=VARCHAR},
            `Identity`  = #{identity,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>